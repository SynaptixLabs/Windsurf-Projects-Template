[tool.poetry]
name = "windsurf-projects-template"
version = "0.1.0"
description = "Production-ready Python project templates for Windsurf IDE with agentic AI integration"
authors = ["Avidor Rabinovich <avidor@synaptixlabs.ai>"]
license = "Proprietary"
readme = "README.md"
homepage = "https://github.com/SynaptixLabs/Windsurf-Projects-Template"
repository = "https://github.com/SynaptixLabs/Windsurf-Projects-Template"
documentation = "https://synaptixlabs.github.io/Windsurf-Projects-Template"
keywords = ["windsurf", "templates", "python", "agentic", "crew.ai", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
copier = ">=9.0.0,<10.0"
pydantic = ">=2.5,<3.0"
pydantic-settings = ">=2.0,<3.0"
python-dotenv = ">=1.0,<2.0"
rich = ">=13.0,<14.0"
typer = ">=0.12.0,<1.0"
PyYAML = ">=6.0,<7.0"
jinja2 = ">=3.1,<4.0"
gitpython = ">=3.1,<4.0"
pathlib-mate = ">=1.0,<2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.23.0"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
ruff = "^0.11.0"
mypy = "^1.8.0"
black = "^24.0.0"
pre-commit = "^3.6.0"
sphinx = "^8.0.0"
sphinx-autoapi = "^3.1.0"
myst-parser = "^4.0.0"
furo = "^2024.8.0"

[tool.poetry.scripts]
windsurf-generate = "scripts.generate_project:app"
windsurf-validate = "scripts.validate_template:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache", 
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "template-generators/*/template/*"  # Don't lint template files
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "S",    # flake8-bandit
]
ignore = [
    "S101",  # assert statements (ok in tests)
    "S608",  # SQL injection (false positives)
]

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true
exclude = [
    "template-generators/",  # Don't type check template files
    "examples/",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--cov=scripts",
    "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 88
target-version = ['py311']
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | template-generators
  )/
)
'''
