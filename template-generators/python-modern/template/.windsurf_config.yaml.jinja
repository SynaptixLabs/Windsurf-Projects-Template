# Windsurf Team Configuration for {{ project_name }}
# This file configures team-wide settings for the Windsurf IDE

project:
  name: "{{ project_name }}"
  description: "{{ project_description }}"
  type: "{{ project_type }}"
  version: "0.1.0"

# Team development preferences  
team:
  code_style:
    formatter: "ruff"
    linter: "ruff"
    type_checker: "mypy"
    line_length: 88
    python_version: "{{ python_version }}"
    
  testing:
    framework: "pytest"
    coverage_threshold: {{ coverage_threshold }}
    {% if testing_framework == "comprehensive" or testing_framework == "enterprise" -%}
    parallel_execution: true
    property_based: true  # Hypothesis
    {% else -%}
    parallel_execution: false
    property_based: false
    {% endif -%}
    
  documentation:
    {% if project_type == "web-api" or project_type == "agentic-ai" -%}
    style: "mkdocs"
    {% else -%}
    style: "sphinx"
    {% endif -%}
    api_docs: true
    coverage_required: true

# AI Assistant behavior preferences
ai_preferences:
  code_generation:
    include_tests: true
    include_docstrings: true
    include_type_hints: true
    error_handling: "explicit"
    logging: "structured"
    
  architecture:
    pattern: "layered"
    separation_of_concerns: true
    {% if project_type == "web-api" or project_type == "agentic-ai" -%}
    async_preferred: true
    {% else -%}
    async_preferred: false
    {% endif -%}
    pydantic_models: true
    
  review_focus:
    - "type_safety"
    - "test_coverage" 
    - "performance"
    - "security"
    - "maintainability"

# Project-specific rules
rules:
  file_organization:
    src_layout: true
    test_colocation: false
    config_centralized: true
    
  dependencies:
    manager: "{{ package_manager }}"
    lock_file_required: true
    security_scanning: true
    
  git_workflow:
    {% if include_pre_commit -%}
    pre_commit_hooks: true
    {% else -%}
    pre_commit_hooks: false
    {% endif -%}
    conventional_commits: true
    branch_protection: true

# Integration settings
integrations:
  {% if include_github_actions -%}
  github:
    actions_enabled: true
    security_alerts: true
    dependabot: true
  {% endif -%}
    
  monitoring:
    performance_tracking: true
    error_reporting: true
    usage_analytics: false  # Privacy-focused

# Development environment
environment:
  python_version: "{{ python_version }}"
  virtual_env: "{{ package_manager }}"
  ide_extensions:
    - "python"
    - "ruff"
    - "mypy"
    - "pytest"
    - "git"
    {% if project_type == "web-api" or project_type == "agentic-ai" -%}
    - "fastapi"
    {% endif -%}
    {% if project_type == "agentic-ai" -%}
    - "crewai"
    {% endif -%}
    {% if project_type == "data-science" -%}
    - "jupyter"
    - "polars"
    {% endif -%}
    {% if project_type == "game-development" -%}
    - "pygame"
    {% endif -%}
