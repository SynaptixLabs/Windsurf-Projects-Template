"""
Unit tests for Polars data processing components
"""
import polars as pl
from polars.testing import assert_frame_equal
import pytest
from pathlib import Path

from src.{{project_slug}}.data.loaders.csv_loader import CSVLoader
from src.{{project_slug}}.data.processors.data_processor import DataProcessor

@pytest.fixture
def sample_csv(tmp_path: Path) -> Path:
    """Create a sample CSV file for testing"""
    csv_file = tmp_path / "sample.csv"
    df = pl.DataFrame({
        "col_a": [1, 2, 3],
        "col_b": [4, 5, 6],
        "some_column": [7, None, 9]
    })
    df.write_csv(csv_file)
    return csv_file

def test_csv_loader(sample_csv: Path):
    """Test loading data from a CSV file"""
    loader = CSVLoader()
    df = loader.process(sample_csv)
    
    expected = pl.DataFrame({
        "col_a": [1, 2, 3],
        "col_b": [4, 5, 6],
        "some_column": [7, None, 9]
    })
    
    assert_frame_equal(df, expected)

def test_data_processor():
    """Test basic data processing logic"""
    processor = DataProcessor()
    
    input_df = pl.DataFrame({
        "col_a": [1, 2, 3],
        "col_b": [4, 5, 6],
        "some_column": [7, None, 9]
    })
    
    processed_df = processor.process(input_df)
    
    expected_df = pl.DataFrame({
        "col_a": [1, 2, 3],
        "col_b": [4, 5, 6],
        "some_column": [7, 7, 9],
        "new_feature": [4, 10, 18]
    })
    
    # Polars < 0.17.0 has a bug with `assert_frame_equal` and `None`
    # so we'll fill nulls before comparing
    assert_frame_equal(
        processed_df.fill_null(-1), 
        expected_df.fill_null(-1)
    )
