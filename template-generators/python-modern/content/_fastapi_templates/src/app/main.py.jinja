# --- Windsurf Metadata ---
# Assistant: Cascade
# Created: 2025-06-30
# --- End Windsurf Metadata ---

from fastapi import FastAPI
from contextlib import asynccontextmanager
import structlog

from {{project_slug}}.core.config import get_settings
from {{project_slug}}.core.database import init_db, close_db
from {{project_slug}}.core.logging import setup_logging
from {{project_slug}}.api.routes import api_router

# Setup logging
setup_logging()
logger = structlog.get_logger(__name__)

@asynccontextmanager
async def lifespan(app: FastAPI):
    """Manage application lifespan events."""
    logger.info("Application startup...")
    await init_db()
    yield
    logger.info("Application shutdown...")
    await close_db()

def create_app() -> FastAPI:
    """Application factory function."""
    settings = get_settings()

    app = FastAPI(
        title=settings.PROJECT_NAME,
        version=settings.PROJECT_VERSION,
        openapi_url=f"{settings.API_V1_STR}/openapi.json",
        lifespan=lifespan
    )

    app.include_router(api_router, prefix=settings.API_V1_STR)

    logger.info("Application created", project_name=settings.PROJECT_NAME, environment=settings.ENVIRONMENT)
    return app

app = create_app()
