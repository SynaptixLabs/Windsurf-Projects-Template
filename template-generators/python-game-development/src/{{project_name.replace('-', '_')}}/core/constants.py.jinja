"""Game constants for {{project_name}} including colors, dimensions, game states, and configuration values."""

from enum import Enum
from typing import Final, Tuple

# === Display Configuration ===
DEFAULT_WINDOW_WIDTH: Final[int] = 800
DEFAULT_WINDOW_HEIGHT: Final[int] = 600
DEFAULT_FPS: Final[int] = 60

# === Timing Constants ===
ANIMATION_DURATION_MS: Final[int] = 300
INPUT_COOLDOWN_MS: Final[int] = 150

# === Color Constants (RGB) ===
class Colors:
    """Game color constants."""
    
    # Background and UI
    BACKGROUND: Final[Tuple[int, int, int]] = (32, 32, 32)
    UI_PRIMARY: Final[Tuple[int, int, int]] = (64, 128, 255)
    UI_SECONDARY: Final[Tuple[int, int, int]] = (128, 128, 128)
    
    # Text colors
    TEXT_PRIMARY: Final[Tuple[int, int, int]] = (255, 255, 255)
    TEXT_SECONDARY: Final[Tuple[int, int, int]] = (192, 192, 192)
    
    # Interactive elements
    BUTTON_NORMAL: Final[Tuple[int, int, int]] = (96, 96, 96)
    BUTTON_HOVER: Final[Tuple[int, int, int]] = (128, 128, 128)
    BUTTON_PRESSED: Final[Tuple[int, int, int]] = (64, 64, 64)
    
    # Status indicators
    HIGHLIGHT: Final[Tuple[int, int, int]] = (255, 255, 255)
    WARNING: Final[Tuple[int, int, int]] = (255, 128, 0)
    ERROR: Final[Tuple[int, int, int]] = (255, 0, 0)
    SUCCESS: Final[Tuple[int, int, int]] = (0, 255, 0)


# === Game State Enums ===
class GameState(str, Enum):
    """Enumeration of possible game states."""
    
    MENU = "menu"
    PLAYING = "playing"
    PAUSED = "paused"
    GAME_OVER = "game_over"
    SETTINGS = "settings"
    CREDITS = "credits"


class PlayerType(str, Enum):
    """Enumeration of player types."""
    
    HUMAN = "human"
    AI = "ai"
    REMOTE = "remote"


class PieceType(str, Enum):
    """Enumeration of game piece types (generic for all games)."""
    
    # Generic pieces that can be used in various games
    PLAYER_ONE = "player_one"
    PLAYER_TWO = "player_two"
    NEUTRAL = "neutral"
    EMPTY = "empty"
    
    # Common game pieces (can be customized per game)
    X = "x"
    O = "o"
    RED = "red"
    BLUE = "blue"
    BLACK = "black"
    WHITE = "white"


class GameResult(str, Enum):
    """Enumeration of game result types."""
    
    WIN = "win"
    LOSE = "lose"
    DRAW = "draw"
    ONGOING = "ongoing"
    ABORTED = "aborted"


class DifficultyLevel(str, Enum):
    """Enumeration of difficulty levels."""
    
    EASY = "easy"
    MEDIUM = "medium"
    HARD = "hard"
    EXPERT = "expert"


# === Audio Constants ===
class AudioFiles:
    """Audio file path constants."""
    
    # Sound effects
    BUTTON_CLICK: Final[str] = "assets/audio/button_click.wav"
    BUTTON_HOVER: Final[str] = "assets/audio/button_hover.wav"
    GAME_START: Final[str] = "assets/audio/game_start.wav"
    GAME_END: Final[str] = "assets/audio/game_end.wav"
    
    # Background music
    MENU_MUSIC: Final[str] = "assets/audio/menu_music.ogg"
    GAME_MUSIC: Final[str] = "assets/audio/game_music.ogg"


# === Font Constants ===
class FontSizes:
    """Font size constants."""
    
    SMALL: Final[int] = 16
    MEDIUM: Final[int] = 24
    LARGE: Final[int] = 36
    XLARGE: Final[int] = 48
    TITLE: Final[int] = 64


# === Layout Constants ===
class Layout:
    """UI layout constants."""
    
    MARGIN: Final[int] = 20
    PADDING: Final[int] = 10
    BUTTON_WIDTH: Final[int] = 200
    BUTTON_HEIGHT: Final[int] = 50


# === Input Constants ===
class InputKeys:
    """Input key mappings (customize for your game)."""
    
    # Movement (example for games that need directional input)
    UP = "up"
    DOWN = "down"
    LEFT = "left"
    RIGHT = "right"
    
    # Actions
    CONFIRM = "confirm"
    CANCEL = "cancel"
    PAUSE = "pause"
    MENU = "menu"


# === Error Messages ===
ERROR_MESSAGES: Final[dict[str, str]] = {
    "invalid_input": "Invalid input: {input}",
    "game_not_active": "Game is not currently active", 
    "save_error": "Could not save game: {error}",
    "load_error": "Could not load game: {error}",
    "config_error": "Configuration error: {error}",
}

# === Logging Constants ===
LOG_FORMAT: Final[str] = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
LOG_DATE_FORMAT: Final[str] = "%Y-%m-%d %H:%M:%S"

# === Game-Specific Constants ===
# TODO: Add your game-specific constants here
# Examples:
# BOARD_SIZE: Final[int] = 8  # For chess/checkers
# MAX_PLAYERS: Final[int] = 4  # For multiplayer games
# LEVEL_COUNT: Final[int] = 10  # For level-based games
